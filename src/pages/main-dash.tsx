import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useSession } from "next-auth/react";
import {useForm } from 'react-hook-form';
import { trpc } from "../utils/trpc";

const MainDash: NextPage = () => {
  const { data: sessionData } = useSession();
  const { data: schools } = trpc.schools.getUsersSchools.useQuery();
  const createSchool = trpc.schools.create.useMutation();
  const { register, handleSubmit } = useForm();

  const onCreateSchool = handleSubmit((e) => {
    if (!sessionData) return null;
    createSchool.mutate({ name: e.schoolName, userId: sessionData?.user.id || "" });
  });

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col items-center justify-center bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className="container flex flex-col items-center justify-center gap-12 px-4 py-16 ">
                {schools?.map((school) => ( <Link href={`/school/${school.id}`} key={school.id} className="flex flex-col items-center justify-center gap-4 px-4 py-8 bg-white/10 rounded-xl transition hover:bg-white/20">
                    <h2 className="text-2xl font-semibold text-white">{school.name}</h2>
                </Link>) )}
        </div>
        <div>
        <form onSubmit={onCreateSchool}  className="flex max-w-xs flex-col gap-4 rounded-xl bg-white/10 p-4 text-black"
>
            <label htmlFor="schoolName" className="text-2xl font-bold">School Name</label>
            <input type="text" {...register("schoolName", { required: true })} id="schoolName" className="rounded-lg"/>
            <button type="submit" className="hover:bg-white/20 rounded-lg">Create School</button>
        </form>
        </div>
      </main>
    </>
  );
};

export default MainDash;
