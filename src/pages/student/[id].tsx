import { type NextPage } from "next";
import Head from "next/head";

import { useSession } from "next-auth/react";
import { useRouter } from "next/router";
import React, { useState } from "react";
import { useForm } from "react-hook-form";
import { trpc } from "../../utils/trpc";
import Link from "next/link";
import AddEC from "../components/addEC";
import AddCaraWeek from "../components/addCaraWeek";
import AddCaraEvent from "../components/addCaraEvent";

const TeamDetails: NextPage = () => {
    const { data: sessionData } = useSession();
    const [modalOpen, setModalOpen] = useState(false)
    const router  = useRouter()
    const context = trpc.useContext()
    const { id } = router.query
    
    const {data: student } = trpc.students.getById.useQuery( 
        {id:id}, // no input
        { enabled: sessionData?.user !== undefined },
        )

    return (<>
        <Head>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex min-h-screen flex-col bg-gradient-to-b from-[#2e026d] to-[#15162c]">
        <div className=" float-left  flex flex-row py-4">
        </div>
        <div className="flex flex-col items-left justify-left gap-2 px-2 py-3 bg-white/10 rounded-xl transition hover:bg-white/20">
            <div>
                {student &&<div className=" flex flex-col text-white">
                   <div className="text-2xl font-semibold">
                        {student.first_name + " " + student.last_name}:
                    </div>
                    <div className="text-2xl font-semibold">
                    medically eligible: <span>{student.medically_eligible ? "medically eligible " : "medically ineligible "}</span>
                    </div>
                    <div className="text-2xl font-semibold">
                    academically eligible: <span>{student.academically_eligible ? " academically eligible" : " academically ineligible"}</span>
                    </div>
                    <div className="text-2xl font-semibold">
                        Email: {student.email }
                        </div>
                        <div className="text-2xl font-semibold">
                        Major: {student.major }  Minor: {student.minor }
            </div>
                        <div className="text-2xl font-semibold">
                        GPA: {student.gpa }/4.0
                        </div>
                        <div className="text-2xl font-semibold">
                        Seasons Remaining: {student.seasons_remaining }
                        </div>
                        <div className="text-2xl font-semibold">
                        Progress Towards Degree: {student.progress_towards_degree * 100 }%
                        </div>
                    </div>
                    }
                </div>

                      
                </div>
                <div className="flex flex-row gap-2 py-2 px-2 rounded-xl bg-white/10 my-4 ">
                    <div className="flex flex-auto text-xl text-white">
                        Emergency Contacts:
                    </div>
                    <div className="flex flex-col"> 
                {student && student.emergencyContact.map((ec) => {
                        return (
                            <div key={ec.id} className="text-lg font-semibold text-white">
                                        {ec.name} - {ec.phone} - {ec.relationship} 
                                        </div>

                            
                      )} )}
                      </div>
                          {student && <AddEC studentId={student.id} />}
                        </div>
                        <div className="flex flex-row gap-2 py-2 px-2 rounded-xl bg-white/10 my-4 ">

                    <div className="flex flex-col"> 
                {student && student.caraHours && student.caraHours.map((cara) => {
                        return (
                            <div key={cara.id} className="text-lg font-semibold text-white">
                                        {cara.name} - {cara.week} - {cara.Totalhours} - <AddCaraEvent caraId={cara.id} studentId={student.id} />
                                        </div>

                            
                      )} )}
                      </div>
                      <div className="flex flex-auto text-xl text-white">
                        cara weeks: {student &&<AddCaraWeek studentId={student.id} />}
                    </div>
                      </div>
        </main>
        </>
    );
}

export default TeamDetails;